# Generated by mk-workflows.

name: "linux-release"

on:
  release:
    types: [created]
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:

jobs:
  linux-release:
    runs-on: ubuntu-20.04
    container: ghcr.io/pragmatrix/rust-skia-linux:latest

    steps:
      - uses: actions/checkout@v2

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Prepare Rustup
        run: (cd /github/home && ln -s /root/.cargo)

      - name: Update Rustup and Rust
        run: rustup update

      - name: Configure Rust Toolchain
        run: rustup default stable

      - name: Install Clippy
        run: rustup component add clippy
      - name: "Install Rust target x86_64-unknown-linux-gnu"
        shell: bash
        run: |
          rustup target add x86_64-unknown-linux-gnu

      - name: "Build"
        shell: bash
        run: |
          cargo clean
          cargo build --release
          echo "STROKE_PATH=${BUILD_ARTIFACTSTAGINGDIRECTORY}" >> ${GITHUB_ENV}
        env:
          BUILD_ARTIFACTSTAGINGDIRECTORY: ${{ runner.temp }}


      - name: "Compress binaries"
        if: true
        uses: master-atul/tar-action@v1.0.2
        with:
          command: c
          cwd: "./target/release"
          files: "stroke"
          outPath: "${{ runner.temp }}/stroke-binaries-${{ steps.vars.outputs.sha_short }}.tar.gz"

      - name: "Release binaries"
        if: github.event_name != 'pull_request'
        uses: pragmatrix/release-action@exp
        with:
          owner: meloalright
          repo: stroke
          tag: ${{ steps.vars.outputs.sha_short }}
          allowUpdates: true
          replacesArtifacts: true
          artifacts: "${{ runner.temp }}/stroke-binaries-${{ steps.vars.outputs.sha_short }}.tar.gz"
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
