# .github/workflows/release.yml

name: RELEASE

on:
  release:
    types: [created]
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@master
      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}
      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.settings.target }}-node@16-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ matrix.settings.target }}-node@16-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}
  build-freebsd:
    runs-on: macos-10.15
    name: Build FreeBSD
    # steps:
    #   - uses: actions/checkout@v2
    #   - name: Build
    #     id: build
    #     uses: vmactions/freebsd-vm@v0.1.5
    #     env:
    #       DEBUG: napi:*
    #       RUSTUP_HOME: /usr/local/rustup
    #       CARGO_HOME: /usr/local/cargo
    #       RUSTUP_IO_THREADS: 1
    #     with:
    #       envs: DEBUG RUSTUP_HOME CARGO_HOME RUSTUP_IO_THREADS
    #       usesh: true
    #       mem: 3000
    #       prepare: |
    #         pkg install -y curl node14 python2
    #         curl -qL https://www.npmjs.com/install.sh | sh
    #         npm install -g yarn
    #         curl https://sh.rustup.rs -sSf --output rustup.sh
    #         sh rustup.sh -y --profile minimal --default-toolchain stable
    #       run: |
    #         pwd
    #         ls -lah
    #         whoami
    #         env
    #         freebsd-version
    #         cargo build --release
    #   # - name: Upload artifact
    #   #   uses: actions/upload-artifact@v2
    #   #   with:
    #   #     name: bindings-freebsd
    #   #     path: ${{ env.APP_NAME }}.*.node
    #   #     if-no-files-found: error

    steps:
      - uses: actions/checkout@master
      - name: Compile
        with:
          envs: Python
          usesh: true
          mem: 3000
          prepare: |
            pkg install -y curl node14 python2
        uses: rust-build/rust-build.action@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}