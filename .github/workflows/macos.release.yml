name: "macos-release"

on:
  push:
    tags:
      - '*.*.*'
  pull_request:
env:
  os: 'macos'

jobs:
  macos-release:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2

      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Install Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: stable

      - name: Install Clippy
        run: rustup component add clippy

      # remove LLVM on macOS so that only Apple's clang is used
      - name: Remove LLVM (macOS)
        run: brew uninstall llvm
      - name: 'Install Rust target x86_64-apple-darwin'
        shell: bash
        run: |
          rustup target add x86_64-apple-darwin

      - name: "Build"
        shell: bash
        run: |
          cargo clean
          cargo build --release
          echo "STROKE_PATH=${BUILD_ARTIFACTSTAGINGDIRECTORY}" >> ${GITHUB_ENV}
        env:
          BUILD_ARTIFACTSTAGINGDIRECTORY: ${{ runner.temp }}


      - name: "Compress binaries"
        if: true
        uses: master-atul/tar-action@v1.0.2
        with:
          command: c
          cwd: "./target/release"
          files: "stroke"
          outPath: "${{ runner.temp }}/stroke-${{ runner.workflow }}-${{ steps.vars.outputs.sha_short }}.tar.gz"

      - name: "Release binaries"
        if: github.event_name != 'pull_request'
        uses: pragmatrix/release-action@exp
        with:
          owner: meloalright
          repo: stroke
          tag: ${{ env.RELEASE_VERSION }}
          allowUpdates: true
          replacesArtifacts: true
          artifacts: "${{ runner.temp }}/stroke-${{ env.os }}-${{ steps.vars.outputs.sha_short }}.tar.gz"
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
